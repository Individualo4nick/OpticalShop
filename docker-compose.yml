version: "3.9"
services:
  eureka-server:
    image: vitaliy789/eureka-server:latest
    build:
      context: ./eureka_server
      dockerfile: Dockerfile
    networks:
      - my-network
    ports:
      - "8761:8761"

  gateway:
    image: vitaliy789/gateway:latest
    build:
      context: ./gateway
      dockerfile: Dockerfile
    networks:
      - my-network
    ports:
      - "80:80"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka
      - EUREKA_INSTANSE_PREFERIPADDRESS=true

  store-authorization:
    image: vitaliy789/store-authorization:latest
    build:
      context: ./store_authorization
      dockerfile: Dockerfile
    networks:
      - my-network
    ports:
      - "8080:8080"
    depends_on:
      - authorization_db
      - token-storage
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://authorization_db:5432/store_authorization
      - SPRING_DATA_REDIS_HOST=token-storage
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka
      - EUREKA_INSTANSE_PREFERIPADDRESS=true

  optical-shop:
    image: vitaliy789/optical-shop:latest
    build:
      context: ./optical_shop
    networks:
      - my-network
    ports:
      - "8888:8888"
    volumes:
      - ./images:/app/images
    depends_on:
      - optical_db
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://optical_db:5432/OpticalShop
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka
      - EUREKA_INSTANSE_PREFERIPADDRESS=true

  authorization_db:
    image: postgres
    restart: always
    volumes:
      - ./sql/schema-postgresql.sql:/docker-entrypoint-initdb.d/create_tables.sql
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=wtf123
      - POSTGRES_DB=store_authorization
    networks:
      - my-network
    ports:
      - "5434:5432"

  optical_db:
    image: postgres
    restart: always
    volumes:
      - ./sql/schema-postgresql.sql:/docker-entrypoint-initdb.d/create_tables.sql
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=wtf123
      - POSTGRES_DB=OpticalShop
    networks:
      - my-network
    ports:
      - "5433:5432"

  token-storage:
    image: redis
    restart: always
    networks:
      - my-network
    ports:
      - "6379:6379"

  web-morda:
    image: vitaliy789/web-morda:latest
    build:
      context: ../../WebstormProjects/optical_shop_frontend
      dockerfile: Dockerfile
    environment:
      - REACT_APP_BACKEND_URI=http://0.0.0.0:80
    networks:
      - my-network
    ports:
      - "3000:3000"


networks:
  my-network:
    driver: bridge